#!/bin/@SHELL@
TAUROOT=@TAUROOTDIR@
MACHINE=@ARCH@

if [ ! -d "$TAUROOT" ]; then #If the original root directory is not found find and work from this script's bin directory

  SOURCE="$0"
  while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
  done
  TAUBIN="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"

  TAUROOT=`dirname $TAUBIN`
  MACHINE=`basename $TAUROOT`
  TAUROOT=`dirname $TAUROOT`

fi #End backup root search


OLDJDK=@OLDJDK@
TAU_LIBDIR=${TAUROOT}/${MACHINE}/lib


if [ $OLDJDK = yes ]
then
  echo "Java 1.5 or better required."
  exit 1
fi


# Set CLASSPATH to various jar's needed by the converter
TAU_CLASSPATH=${TAU_LIBDIR}/TAU_tf.jar:${TAU_LIBDIR}/tau_multimerge.jar

MAIN_CLASS=edu/uoregon/tau/multimerge/MultiMerge


if [ -z "${TAU_LIBDIR}" -o "${TAU_LIBDIR}" = "/lib" ]; then
    echo "TAU_LIBDIR is NOT set!"
    exit 1
fi

java -Xmx500m -Xms32m -cp ${TAU_CLASSPATH} ${MAIN_CLASS} $@

